service: s3-to-bq

plugins:
  - serverless-sqs-alarms-plugin
  - serverless-external-s3-event

provider:
  name: aws
  runtime: python3.6
  region: us-west-2
  stage: dev
  memorySize: 128
  stackTags:
    App: intranet
  iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:GetItem
      - dynamodb:PutItem
    Resource:
      - arn:aws:dynamodb:*:*:table/${self:custom.config}
      - arn:aws:dynamodb:*:*:table/${self:custom.jobs}
      - arn:aws:dynamodb:*:*:table/${self:custom.errors}

  - Effect: Allow
    Action:
      - lambda:InvokeFunction
    Resource:
      - arn:aws:lambda:*:*:function:${self:custom.worker}
      - arn:aws:lambda:*:*:function:${self:custom.bq_load}

  - Effect: Allow
    Action:
      - sqs:DeleteMessage
      - sqs:ReceiveMessage
      - sqs:SendMessage
    Resource:
      - arn:aws:sqs:*:*:${self:custom.sqs}
      - arn:aws:sqs:*:*:${self:custom.jobs}

  - Effect: Allow
    Action:
      - s3:Get*
      - s3:List*
    Resource:
      - arn:aws:s3:::co.donuts.dns.zone
      - arn:aws:s3:::co.donuts.dns.zone/*

  - Effect: Allow
    Action:
      - sqs:Get*
      - sqs:List*
      - cloudwatch:*
    Resource: "*"

custom:
  region: ${self:provider.region}
  stage: ${opt:stage, self:provider.stage}
  prefix: ${self:service}-${self:custom.stage}

  worker: ${self:custom.prefix}-worker
  config: ${self:custom.prefix}-config
  errors: ${self:custom.prefix}-errors
  sns: ${self:custom.prefix}-trigger
  sqs: ${self:custom.prefix}-messages
  jobs: ${self:custom.prefix}-job
  bq_load: ${self:custom.prefix}-bq-load
  http_download: ${self:custom.prefix}-http

  sqs-alarms:
    - queue: ${self:custom.sqs}
      topic: ${self:custom.sns}
      thresholds:
        - 1
    - queue: ${self:custom.http_download}
      topic: ${self:custom.sns}
      thresholds:
        - 1
    - queue: ${self:custom.jobs}
      topic: ${self:custom.sns}
      thresholds:
        - 1

package:
  include:
    - .*
  exclude:
    - docs/**
    - helpers/**
    - node_modules/**
    - test/**

functions:
  marshaller:
    handler: marshaller.handler
    environment:
      queue: ${self:custom.sqs}
    events:
      - existingS3:
          bucket: co.donuts.dns.zone
          events:
            - s3:ObjectCreated:*
          rules:
            - suffix: .gz


  configure_scale:
    timeout: 10
    handler: configure_scale.handler
    environment:
      config: ${self:custom.config}
    events:
      - sns: ${self:custom.sns}

  worker:
    timeout: 300
    handler: worker.handler
    name: ${self:custom.worker}
    environment:
      queue: ${self:custom.sqs}
      errors: ${self:custom.errors}
      bq_load: ${self:custom.bq_load}
      stage: ${self:custom.stage}

  dns_loader:
    timeout: 60
    handler: load_dns.handler
    environment:
      queue: ${self:custom.sqs}

  job_check:
    timeout: 300
    handler: job_check.handler
    name: ${self:custom.jobs}-worker
    environment:
      jobs: ${self:custom.jobs}
    events:
      - schedule: rate(5 minutes)

  bq_load:
    handler: load_bigquery.handler
    name: ${self:custom.bq_load}
    environment:
      job_queue: ${self:custom.jobs}

  list_czds:
    handler: list_czds.handler
    environment:
      queue: ${self:custom.http_download}
      token: P6eGxkoid62s9xtDTugZMpQoFuL4AVkX
    events:
      - schedule: rate(1 day)

  http_download:
    handler: http_download.handler
    name: ${self:custom.http_download}-worker
    timeout: 300
    environment:
      queue: ${self:custom.http_download}


resources:
  Resources:

    Messages:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqs}
        MessageRetentionPeriod: 1209600
        VisibilityTimeout: 900
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
            - MessagesDeadLetterQueue
            - Arn
          maxReceiveCount: 5

    MessagesDeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.sqs}-dead-letter-queue
        MessageRetentionPeriod: 1209600

    Errors:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.errors}
        AttributeDefinitions:
          - AttributeName: timestamp
            AttributeType: S
        KeySchema:
          - AttributeName: timestamp
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    Jobs:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.jobs}
        AttributeDefinitions:
          - AttributeName: timestamp
            AttributeType: S
        KeySchema:
          - AttributeName: timestamp
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    JobQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.jobs}
        MessageRetentionPeriod: 1209600
        VisibilityTimeout: 900
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
            - JobDeadLetterQueue
            - Arn
          maxReceiveCount: 10

    JobDeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.jobs}-dead-letter-queue
        MessageRetentionPeriod: 1209600

    HttpDownloadQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.http_download}
        MessageRetentionPeriod: 1209600
        VisibilityTimeout: 900
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
            - HttpDownloadDeadLetter
            - Arn
          maxReceiveCount: 3

    HttpDownloadDeadLetter:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.http_download}-dead-letter-queue
        MessageRetentionPeriod: 1209600
