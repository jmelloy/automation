service: s3-to-bq

plugins:
  - serverless-sqs-alarms-plugin
  - serverless-external-s3-event

provider:
  name: aws
  runtime: python3.6
  region: us-west-2
  stage: dev
  memorySize: 128
  stackTags:
    App: intranet
  iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:GetItem
      - dynamodb:PutItem
    Resource:
      - arn:aws:dynamodb:*:*:table/${self:custom.jobs}

  - Effect: Allow
    Action:
      - sqs:DeleteMessage
      - sqs:ReceiveMessage
      - sqs:SendMessage
    Resource:
      - arn:aws:sqs:*:*:${self:custom.jobs}

  - Effect: Allow
    Action:
      - sqs:Get*
      - sqs:List*
      - cloudwatch:*
    Resource: "*"

custom:
  region: ${self:provider.region}
  stage: ${opt:stage, self:provider.stage}
  prefix: ${self:service}-${self:custom.stage}

  jobs: ${self:custom.prefix}-job
  sns: ${self:custom.prefix}-trigger

  sqs-alarms:
    - queue: ${self:custom.jobs}
      topic: ${self:custom.sns}
      thresholds:
        - 1

package:
  include:
    - .*
  exclude:
    - docs/**
    - helpers/**
    - node_modules/**
    - test/**

functions:

  job_check:
    timeout: 300
    handler: job_check.handler
    name: ${self:custom.jobs}
    environment:
      jobs: ${self:custom.jobs}

  bq_load:
    handler: load_bigquery.handler
    environment:
      job_queue: ${self:custom.jobs}
    events:
      - http:
          path: load
          method: get

  configure_scale:
    handler: configure_scale.handler
    environment:
      queue: ${self:custom.jobs}
    events:
      - sns: ${self:custom.sns}

resources:
  Resources:

    Jobs:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.jobs}
        AttributeDefinitions:
          - AttributeName: timestamp
            AttributeType: S
        KeySchema:
          - AttributeName: timestamp
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5

    JobQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.jobs}
        MessageRetentionPeriod: 1209600
        VisibilityTimeout: 900
        RedrivePolicy:
          deadLetterTargetArn:
            Fn::GetAtt:
            - JobDeadLetterQueue
            - Arn
          maxReceiveCount: 10

    JobDeadLetterQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${self:custom.jobs}-dead-letter-queue
        MessageRetentionPeriod: 1209600

    PathMapping:
      Type: AWS::ApiGateway::BasePathMapping
      Properties:
        BasePath: bigquery
        DomainName: api.dnts.net
        RestApiId:
          Ref: ApiGatewayRestApi
        Stage: ${self:provider.stage}
